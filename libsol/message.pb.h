/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_AELF_MESSAGE_PB_H_INCLUDED
#define PB_AELF_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _aelf_Address {
    pb_callback_t value;
} aelf_Address;

typedef struct _aelf_Transaction {
    /* The address of the sender of the transaction. */
    bool has_from;
    aelf_Address from;
    /* The address of the contract when calling a contract. */
    bool has_to;
    aelf_Address to;
    /* The height of the referenced block hash. */
    int64_t ref_block_number;
    /* The first four bytes of the referenced block hash. */
    pb_callback_t ref_block_prefix;
    /* The name of a method in the smart contract at the To address. */
    pb_callback_t method_name;
    /* The parameters to pass to the smart contract method. */
    pb_callback_t params;
    /* When signing a transaction itâ€™s actually a subset of the fields: from/to and the target method as well as 
 the parameter that were given. It also contains the reference block number and prefix. */
    pb_callback_t signature;
} aelf_Transaction;

typedef struct _aelf_TransferInput {
    /* The receiver of the token. */
    bool has_to;
    aelf_Address to;
    /* The token symbol to transfer. */
    pb_callback_t symbol;
    /* The amount to to transfer. */
    int64_t amount;
    /* The memo. */
    pb_callback_t memo;
} aelf_TransferInput;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define aelf_Transaction_init_default            {false, aelf_Address_init_default, false, aelf_Address_init_default, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define aelf_Address_init_default                {{{NULL}, NULL}}
#define aelf_TransferInput_init_default          {false, aelf_Address_init_default, {{NULL}, NULL}, 0, {{NULL}, NULL}}
#define aelf_Transaction_init_zero               {false, aelf_Address_init_zero, false, aelf_Address_init_zero, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define aelf_Address_init_zero                   {{{NULL}, NULL}}
#define aelf_TransferInput_init_zero             {false, aelf_Address_init_zero, {{NULL}, NULL}, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define aelf_Address_value_tag                   1
#define aelf_Transaction_from_tag                1
#define aelf_Transaction_to_tag                  2
#define aelf_Transaction_ref_block_number_tag    3
#define aelf_Transaction_ref_block_prefix_tag    4
#define aelf_Transaction_method_name_tag         5
#define aelf_Transaction_params_tag              6
#define aelf_Transaction_signature_tag           10000
#define aelf_TransferInput_to_tag                1
#define aelf_TransferInput_symbol_tag            2
#define aelf_TransferInput_amount_tag            3
#define aelf_TransferInput_memo_tag              4

/* Struct field encoding specification for nanopb */
#define aelf_Transaction_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  from,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  to,                2) \
X(a, STATIC,   SINGULAR, INT64,    ref_block_number,   3) \
X(a, CALLBACK, SINGULAR, BYTES,    ref_block_prefix,   4) \
X(a, CALLBACK, SINGULAR, STRING,   method_name,       5) \
X(a, CALLBACK, SINGULAR, BYTES,    params,            6) \
X(a, CALLBACK, SINGULAR, BYTES,    signature,       10000)
#define aelf_Transaction_CALLBACK pb_default_field_callback
#define aelf_Transaction_DEFAULT NULL
#define aelf_Transaction_from_MSGTYPE aelf_Address
#define aelf_Transaction_to_MSGTYPE aelf_Address

#define aelf_Address_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    value,             1)
#define aelf_Address_CALLBACK pb_default_field_callback
#define aelf_Address_DEFAULT NULL

#define aelf_TransferInput_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  to,                1) \
X(a, CALLBACK, SINGULAR, STRING,   symbol,            2) \
X(a, STATIC,   SINGULAR, INT64,    amount,            3) \
X(a, CALLBACK, SINGULAR, STRING,   memo,              4)
#define aelf_TransferInput_CALLBACK pb_default_field_callback
#define aelf_TransferInput_DEFAULT NULL
#define aelf_TransferInput_to_MSGTYPE aelf_Address

extern const pb_msgdesc_t aelf_Transaction_msg;
extern const pb_msgdesc_t aelf_Address_msg;
extern const pb_msgdesc_t aelf_TransferInput_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define aelf_Transaction_fields &aelf_Transaction_msg
#define aelf_Address_fields &aelf_Address_msg
#define aelf_TransferInput_fields &aelf_TransferInput_msg

/* Maximum encoded size of messages (where known) */
/* aelf_Transaction_size depends on runtime parameters */
/* aelf_Address_size depends on runtime parameters */
/* aelf_TransferInput_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
